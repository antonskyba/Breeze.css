/* ==========================================================================
   BREEZE.CSS
   ========================================================================== */

/*
 * Framework that inspires on writing better CSS.
 * By @antonskyba.
 *
 * github.com/antonskyba/Breeze.css
 */





/* Contents
 * ========================================================================== */

/*
 * CONFIG
 * Config...............Project-level configuration and feature switches.
 * Ratio................Ratios that can be used to produce spacing values.
 * Base.................Most important setup variables, such as Base Unit and
 *                      Base Ratio.
 * Breakpoint...........Breakpoints at which layout changes adapting to
 *                      different screen sizes.
 * Palette..............Material Design color palette.
 * Color................Project's color assignments.
 * Font.................Font declarations & settings.
 * Animation............Custom animation timing functions, ported from Axis.
 * Other................Miscellaneous project-wide variables.
 *
 * FUNCTIONS
 * Button...............Buttons tools.
 * Form.................Form tools.
 * Type.................Type tools.
 *
 * GENERIC
 * Box-sizing...........Slightly better box-sizing practice.
 * Normalize............Normalize.css from Necolas.
 * Reset................Simple reset that complements Normalize.css.
 * Shared...............Shared declarations for certain elements.
 *
 * HTML-TAGS
 * Page.................Base styles for page-level elements.
 * Type.................Default styles for text elements: headings, link, etc.
 * Button...............Default button styles.
 * Form.................Base form styles (for <input>, <textarea>, etc).
 * Image................Base image styles.
 * Table................Base table styles.
 *
 * OBJECTS
 * Block................Simple block object with consistent bottom gap.
 * Grid.................Grid module.
 * Wrapper..............Page constraint object.
 * Table................Simple object for manipulating the structure of <table>.
 *
 * UI-COMPONENTS
 * Button...............An example button component, and how it fits into the
 *                      Breeze framework.
 *
 * UTILITIES
 * Accessibility........Helper classes that control content's accessibility.
 * Box-model............Utility classes to put box-model values onto elements.
 * Flexbox..............Helper classes to set and control Flexbox container.
 * Type.................Text & font helper classes.
 * Print................Print styles that optimize the printing process and make
 *                      the printed pages easier to read.
 * Debug................Styles to make debugging easier.
 */





$css-path = '/' 

// Config
// =============================================================================
   
// Global settings files that contain project-wide variables; things that need
// to be made available to the entire codebase.

@import $css-path + 'config/_config.config'
@import $css-path + 'config/_ratio.config'
@import $css-path + 'config/_base.config'
@import $css-path + 'config/_breakpoint.config'
@import $css-path + 'config/_palette.config'
@import $css-path + 'config/_color.config'
@import $css-path + 'config/_font.config'
@import $css-path + 'config/_animation.config'
@import $css-path + 'config/_other.config'





// Functions
// =============================================================================

// Globally used functions and mixins. Additional libs can be imported and
// initialized there.

@import $css-path + 'functions/_button.functions'
@import $css-path + 'functions/_form.functions'
@import $css-path + 'functions/_type.functions'





/* Generic
 * ========================================================================== */

/*   
 * Low-specific & far-reaching rulesets: reset, normalize, box-sizing
 * definition, etc. This is the first layer which generates actual CSS.   
 */

@import $css-path + 'generic/_box-sizing.generic'
@import $css-path + 'generic/_normalize.generic'
@import $css-path + 'generic/_reset.generic'
@import $css-path + 'generic/_shared.generic'





/* HTML Tags
 * ========================================================================== */

/*
 * Styles for unclassed HTML elements (e.g. <h1>, <input>). These come with
 * default styling from the browser so we can redefine them there.
 */

@import $css-path + 'html-tags/_page.html-tags'
@import $css-path + 'html-tags/_type.html-tags'
@import $css-path + 'html-tags/_button.html-tags'
@import $css-path + 'html-tags/_form.html-tags'
@import $css-path + 'html-tags/_image.html-tags'
@import $css-path + 'html-tags/_table.html-tags'





/* Objects
 * ========================================================================== */

/*
 * Class-based selectors which define objects, abstractions, and design 
 * patterns. 
 */

@import $css-path + 'objects/_block.objects'
@import $css-path + 'objects/_grid.objects'
@import $css-path + 'objects/_wrapper.objects'
@import $css-path + 'objects/_table.objects'





/* UI Components
 * ========================================================================== */

/*
 * Discrete, complete chunks of UI. This is where majority of designed
 * components/chunks of UI are injected.
 */

@import $css-path + 'ui-components/_example.button.ui-components'





/* Utilities
 * ========================================================================== */

/*
 * Utilities and helper classes with ability to override anything which goes
 * before.
 */

@import $css-path + 'utilities/_accessibility.utilities'
@import $css-path + 'utilities/_box-model.utilities'
@import $css-path + 'utilities/_flexbox.utilities'
@import $css-path + 'utilities/_type.utilities'
@import $css-path + 'utilities/_print.utilities'
@import $css-path + 'utilities/_debug.utilities'